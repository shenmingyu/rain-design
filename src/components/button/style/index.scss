@import '../../../style/scss/color.scss';
@import '../../../style/scss/global.scss';
@import '../../../style/scss/mixin.scss';
@import '../../../style/scss/animation.scss';
@import '../../../style/scss/var.scss';

$prefix: rain-design-button;
$sizes: ((large, ), (big, ), (normal, ), (small, ), (tiny, ), (customize, ));
$typesMap: (primary: (backgroundColor: $color-blue-6,
    backgroundHoverColor:$color-blue-7,
    textColor: $color-white,
    textHoverColor: $color-white,
    borderColor:$color-white,
    borderHoverColor:$color-white,
  ),
  secondary: (backgroundColor: $color-white,
    backgroundHoverColor:$color-blue-0,
    textColor: $color-blue-6,
    textHoverColor: $color-blue-7,
    borderColor:$color-blue-6,
    borderHoverColor:$color-blue-7,
  ),
  default: (backgroundColor: $color-grey-4,
    backgroundHoverColor:$color-grey-5,
    textColor: $color-black,
    textHoverColor: $color-black,
    borderColor:$color-black,
    borderHoverColor:$color-black,
  ),
  ghost: (backgroundColor: transparent,
    backgroundHoverColor: transparent,
    textColor: $color-blue-grey-5,
    textHoverColor: $color-blue-7,
    borderColor: $color-blue-grey-5,
    borderHoverColor:$color-blue-7,
  ));

.#{$prefix} {
  @include flex(row, center, center);
  box-sizing: border-box;
  border-width: 1px;
  border-style: solid;
  position: relative;
  outline: none;
  font-size: 14px;
  font-family: 'Courier New', Courier, monospace;
  cursor: pointer;

  @each $type in map-keys($typesMap) {
    &.#{$prefix}-#{$type} {
      &[data-plain='true'] {
        @include buttonTypes($typesMap, $type, false);
      }

      &[data-plain='false'] {
        @include buttonTypes($typesMap, $type, true);
      }
    }
  }

  &-large {
    width: 150px;
    height: 60px;
  }

  &-big {
    width: 125px;
    height: 50px;
  }

  &-normal {
    width: 100px;
    height: 40px;
  }

  &-small {
    width: 75px;
    height: 30px;
  }

  &-tiny {
    width: 50px;
    height: 20px;
  }

  &-loading {}

  &-danger {
    background-color: $color-red-5;
  }

  &-dashed {
    border-style: dashed;
  }
}